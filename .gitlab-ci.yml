
stages:
  - build
  - test

build:
  stage: build
  script:
    - mvn clean package
  artifacts:
    paths:
      - target/*.jar

ping pong:
  stage: test
  script:
    - curl -X GET http://localhost:8080/ping | grep "pong"

testa ordenacao:
  stage: test
  script:
    - curl -X POST "http://localhost:8080/musicas?nome=Undone%20thing"
    - curl -X POST "http://localhost:8080/musicas?nome=One"
    - curl -X POST "http://localhost:8080/musicas?nome=Still"
    - curl -X PUT "http://localhost:8080/musicas/Undone%20thing/avaliar?avaliacao=5"
    - curl -X PUT "http://localhost:8080/musicas/One/avaliar?avaliacao=4"
    - curl -X PUT "http://localhost:8080/musicas/Still/avaliar?avaliacao=3"
    - curl -X GET http://localhost:8080/musicas | grep '"nome":"Undone thing","avaliacao":5'

cadastra musica:
  stage: test
  script:
    - curl -X POST "http://localhost:8080/musicas?nome=NewSong" | grep '"avaliacao":0'

deploy_aws:
  stage: deploy_aws
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_REGION
    - aws elasticbeanstalk create-application-version --application-name musica-api --version-label v1 --source-bundle S3Bucket=$S3_BUCKET,S3Key=target/musica-api.jar
    - aws elasticbeanstalk update-environment --environment-name musica-api-env --version-label v1

deploy_heroku:
  stage: deploy_heroku
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY

    
    